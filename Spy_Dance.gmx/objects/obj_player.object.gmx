<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var_player = -1;
var_speed = 1;
var_dance = 0;
var_marked = 0;
randomize();
x = random(room_width);
y = random(room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 1 Controls

if var_player == 0 {

    if var_dance == -1 and keyboard_check_released(ord('W'))
        var_dance = 0;
        
    if var_dance == -2 {
        hspeed = 0;
        vspeed = 0;
        if not keyboard_check(ord('W')) and not keyboard_check(ord('A')) and
        not keyboard_check(ord('S')) and not keyboard_check(ord('D'))
            var_dance = 1;
    }

    if var_dance == 1 {
        if keyboard_check_pressed(ord('W')) {
            var_dance = -1;
            exit
        }
        
        if keyboard_check_released(ord('A')) or keyboard_check_released(ord('S')) or keyboard_check_released(ord('D')) {
            var_dance = -2;
            exit;
        }
        
        if keyboard_check(ord('A')) and not keyboard_check(ord('S')) and not keyboard_check(ord('D'))
            image_blend = c_blue;
        if not keyboard_check(ord('A')) and keyboard_check(ord('S')) and not keyboard_check(ord('D'))
            image_blend = c_red;
        if not keyboard_check(ord('A')) and not keyboard_check(ord('S')) and keyboard_check(ord('D'))
            image_blend = c_yellow;
        if keyboard_check(ord('A')) and keyboard_check(ord('S')) and not keyboard_check(ord('D'))
            image_blend = c_purple;
        if keyboard_check(ord('A')) and not keyboard_check(ord('S')) and keyboard_check(ord('D'))
            image_blend = c_green;
        if not keyboard_check(ord('A')) and keyboard_check(ord('S')) and keyboard_check(ord('D'))
            image_blend = c_orange;
    }
    else if var_dance == 0 {
            if keyboard_check(ord('W')) {
                if keyboard_check_pressed(ord('S')) {
                    var_dance = -2;
                    exit;
                }
                vspeed = -global.speed;
            }
            if keyboard_check(ord('S')) {
                if keyboard_check_pressed(ord('W')) {
                    var_dance = -2;
                    exit;
                }
                vspeed = global.speed;
            }
            if not keyboard_check(ord('W')) and not keyboard_check(ord('S'))
                vspeed = 0;
    
            if keyboard_check(ord('A')) {
                if keyboard_check_pressed(ord('D')) {
                    var_dance = -2;
                    exit;
                }
                hspeed = -global.speed;
            }
            if keyboard_check(ord('D')) {
                if keyboard_check_pressed(ord('A')) {
                    var_dance = -2;
                    exit;
                }
                hspeed = global.speed;
            }
            if not keyboard_check(ord('A')) and not keyboard_check(ord('D'))
                hspeed = 0;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 2 Controls

if var_player == 1 {

    if var_dance == 1 {
        hspeed = 0;
        vspeed = 0;
        
        if keyboard_check_pressed(ord('F')) and keyboard_check_pressed(ord('G')) and keyboard_check_pressed(ord('H')) {
            var_dance = 0;
            exit
        }
        
        if keyboard_check_pressed(ord('F')) and not keyboard_check_pressed(ord('G')) and not keyboard_check_pressed(ord('H'))
            image_blend = c_blue;
        if not keyboard_check_pressed(ord('F')) and keyboard_check_pressed(ord('G')) and not keyboard_check_pressed(ord('H'))
            image_blend = c_red;
        if not keyboard_check_pressed(ord('F')) and not keyboard_check_pressed(ord('G')) and keyboard_check_pressed(ord('H'))
            image_blend = c_yellow;
        if keyboard_check_pressed(ord('F')) and keyboard_check_pressed(ord('G')) and not keyboard_check_pressed(ord('H'))
            image_blend = c_purple;
        if keyboard_check_pressed(ord('F')) and not keyboard_check_pressed(ord('G')) and keyboard_check_pressed(ord('H'))
            image_blend = c_green;
        if not keyboard_check_pressed(ord('F')) and keyboard_check_pressed(ord('G')) and keyboard_check_pressed(ord('H'))
            image_blend = c_orange;
    }
    else {
        if keyboard_check_pressed(ord('F')) and keyboard_check_pressed(ord('G')) and keyboard_check_pressed(ord('H')) {
            var_dance = 1;
            exit;
        }
        
        if not (keyboard_check(ord('F')) and  keyboard_check(ord('G')) and  keyboard_check(ord('H'))) {
        
            if keyboard_check(ord('T'))
                vspeed = -global.speed;
            if keyboard_check(ord('G'))
                vspeed = global.speed;
            if not keyboard_check(ord('T')) and not keyboard_check(ord('G'))
                vspeed = 0;
    
            if keyboard_check(ord('F'))
                hspeed = -global.speed;
            if keyboard_check(ord('H'))
                hspeed = global.speed;
            if not keyboard_check(ord('F')) and not keyboard_check(ord('H'))
                hspeed = 0;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 3 Controls

if var_player == 2 {

    if var_dance == 1 {
        hspeed = 0;
        vspeed = 0;
        
        if keyboard_check_pressed(ord('J')) and keyboard_check_pressed(ord('K')) and keyboard_check_pressed(ord('L')) {
            var_dance = 0;
            exit
        }
        
        if keyboard_check_pressed(ord('J')) and not keyboard_check_pressed(ord('K')) and not keyboard_check_pressed(ord('L'))
            image_blend = c_blue;
        if not keyboard_check_pressed(ord('J')) and keyboard_check_pressed(ord('K')) and not keyboard_check_pressed(ord('L'))
            image_blend = c_red;
        if not keyboard_check_pressed(ord('J')) and not keyboard_check_pressed(ord('K')) and keyboard_check_pressed(ord('L'))
            image_blend = c_yellow;
        if keyboard_check_pressed(ord('J')) and keyboard_check_pressed(ord('K')) and not keyboard_check_pressed(ord('L'))
            image_blend = c_purple;
        if keyboard_check_pressed(ord('J')) and not keyboard_check_pressed(ord('K')) and keyboard_check_pressed(ord('L'))
            image_blend = c_green;
        if not keyboard_check_pressed(ord('J')) and keyboard_check_pressed(ord('K')) and keyboard_check_pressed(ord('L'))
            image_blend = c_orange;
    }
    else {
        if keyboard_check_pressed(ord('J')) and keyboard_check_pressed(ord('K')) and keyboard_check_pressed(ord('L')) {
            var_dance = 1;
            exit;
        }
        
        if not (keyboard_check(ord('J')) and  keyboard_check(ord('K')) and  keyboard_check(ord('L'))) {
        
            if keyboard_check(ord('I'))
                vspeed = -global.speed;
            if keyboard_check(ord('K'))
                vspeed = global.speed;
            if not keyboard_check(ord('I')) and not keyboard_check(ord('K'))
                vspeed = 0;
    
            if keyboard_check(ord('J'))
                hspeed = -global.speed;
            if keyboard_check(ord('L'))
                hspeed = global.speed;
            if not keyboard_check(ord('J')) and not keyboard_check(ord('L'))
                hspeed = 0;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Screen Wrap

if x &lt; 128+16
    x = room_width-16;
if x &gt; room_width-16
    x = 128+16;
if y &lt; 16
    y = room_height-16;
if y &gt; room_height-16
    y = 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mark

if var_marked == 0
    var_marked = 1;
else var_marked = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.shots--;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if var_marked == 1 and (var_dance == 1 or var_dance == -2)
    draw_rectangle_color(x+20,y+20,x-21,y-21,c_gray,c_gray,c_gray,c_gray,false);
else if var_marked == 1 and var_dance == 0
    draw_rectangle_color(x+20,y+20,x-21,y-21,c_black,c_black,c_black,c_black,false);
else if var_marked == 0 and (var_dance == 1 or var_dance == -2) {
    draw_rectangle_color(x+20,y+20,x-21,y-21,c_white,c_white,c_white,c_white,false);
    draw_rectangle_color(x+17,y+17,x-18,y-18,c_black,c_black,c_black,c_black,false);
}

draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
